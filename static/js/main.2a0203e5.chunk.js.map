{"version":3,"sources":["components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","config.js","reducers/user/userActions.js","containers/main/main.js","containers/signup/signup.js","containers/create/create.js","containers/login/login.js","Routes.js","App.js","serviceWorker.js","reducers/user/userReducer.js","reducers.js","index.js"],"names":["C","component","cProps","props","rest","render","isAuthenticated","to","API","LOGIN","Main","logout","localStorage","clear","history","push","goToCreateForm","goToHome","likePost","id","requestOptions","method","body","JSON","stringify","headers","fetch","then","res","status","Error","json","catch","err","console","log","response","setState","posts","loading","dislikePost","state","post","title","author","createTimestamp","likes","dislikes","interaction","searchItem","this","className","Navbar","bg","expand","Brand","style","marginRight","onClick","Toggle","aria-controls","Collapse","Nav","Link","marginTop","map","p","key","Card","Body","padding","Title","minHeight","paddingTop","Text","display","flexDirection","position","bottom","marginBottom","right","paddingRight","href","class","Component","connect","user","SignUp","handleFirstName","event","firstName","target","value","handleLastName","lastName","handleEmail","email","handlePassword","password","handleRepassword","repassword","handleSubmit","preventDefault","hasServerError","hasError","Alert","variant","Form","onSubmit","Group","Label","Control","type","onChange","Button","width","Create","handleCreate","length","newPost","subraddit","addPost","handleAuthor","handleTitle","handleBody","handleSubraddit","FormGroup","mapDispatchToProps","payload","loadPosts","Login","goToSignUp","userId","setItem","login","childProps","AuthenticatedRoute","path","exact","main","UnauthenticatedRoute","signup","create","App","createSuccess","getItem","height","Routes","withRouter","Boolean","window","location","hostname","match","initialState","action","combineReducers","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2a0203e5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default ({ component: C, props: cProps, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      cProps.isAuthenticated ? (\n        <C {...props} {...cProps} />\n      ) : (\n        <Redirect to={\"/login\"} />\n      )\n    }\n  />\n);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport default ({ component: C, props: cProps, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !cProps.isAuthenticated ? (\n        <C {...props} {...cProps} />\n      ) : (\n        <Redirect to={\"/\"} />\n      )\n    }\n  />\n);","export const API = \"http://raddit.new-labs.co:8080/raddit/\"","export const LOGIN = '[User] Login';\nexport const LOAD_POSTS = '[User] Load Posts';\nexport const ADD_POST = '[User] Add Post';\nexport const LOGOUT = '[User] Logout';\n\nexport function login(user) {\n    return {\n        type: LOGIN,\n        payload: user\n    }    \n};\n\nexport function addPost(post) {\n    return {\n        type: ADD_POST,\n        payload: post\n    }    \n};\n\nexport function loadPosts(posts) {\n    return {\n        type: LOAD_POSTS,\n        payload: posts\n    }    \n};","/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Form, Button, Navbar, Nav, NavDropdown, FormControl, Alert, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { API } from '../../config';\nimport { addPost, loadPosts } from '../../reducers/user/userActions'\n// import { logout } from '../../reducers/user/userActions';\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            posts: [{\n                post: {\n                    id: 0,\n                    title: \"\",\n                    body: \"\",\n                    author: \"\",\n                    createTimestamp: \"\" ,\n                    likes: 0,\n                    dislikes: 0,\n                    interaction: 0,\n                }\n            }],\n            loading: true,\n            searchItem: \"\",\n        }\n\n    \n    }\n\n    componentDidMount(){\n        fetch(API + 'post/all') \n            .then(res => {\n                console.log(res);\n                return res.json();\n            })\n            .then(response => {\n                console.log(response);\n                this.setState({ posts: response, loading:false });\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            console.log(this.state);\n    }\n\n    logout = () => {\n        localStorage.clear();\n        this.props.history.push('/login');\n    }\n\n    goToCreateForm = () => {\n        this.props.history.push('/create');\n    }\n\n    goToHome = () => {\n        this.props.history.push('/');\n    }\n\n    likePost = id => {\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(1,null),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n\n        fetch(API + \"post/addlike/\" + id, requestOptions)\n            .then(res => {\n                if(res.status !== 201) {\n                    throw new Error(\"Not created.\");\n                }    \n                return res.json()\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n        fetch(API + 'post/all') \n            .then(res => {\n                return res.json();\n            })\n            .then(response => {\n                this.setState({ posts: response, loading:false });\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    dislikePost = id => {\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(1,null),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n\n        fetch(API + \"post/unlike/\" + id, requestOptions)\n            .then(res => {\n                if(res.status !== 201) {\n                    throw new Error(\"Not disliked.\");\n                }    \n                return res.json()\n            })\n            .catch(err => {\n                console.log(err);\n            })\n\n        fetch(API + 'post/all') \n            .then(res => {\n                return res.json();\n            })\n            .then(response => {\n                this.setState({ posts: response, loading:false });\n            })\n            .catch(err => {\n                console.log(err);\n            })   \n    }\n\n    render(){\n        return (\n            <div className=\"page-container\">\n                <Navbar bg=\"light\" className=\"white\" expand=\"xl\">\n                    <Navbar.Brand id=\"parent\" style={{ marginRight: '0'}} onClick={this.goToHome}> The R Word.</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link onClick={this.goToHome}>Posts</Nav.Link>\n                            <Nav.Link onClick={this.goToCreateForm}>Create</Nav.Link>\n                            <Nav.Link onClick={this.logout}>Log Out</Nav.Link>\n                        </Nav>\n\n                    </Navbar.Collapse>\n                </Navbar>\n                {this.state.loading ? \n                    <div className=\"content-wrap\">LOADING ...</div> :\n                        <div style={{ marginTop: 20}} className=\"blog content-wrap\">\n                                {this.state.posts.map(p => (\n                                    <div key={p.id}>\n                                        <Card id=\"card\" className=\"card\">\n                                            <Card.Body style={{ padding: '0'}}>\n                                                <div> \n                                                    <Card.Title className=\"sand\"><div className=\"container\" style= {{minHeight: '40px', paddingTop: '5px'}}>{p.title}</div></Card.Title>\n                                                    <div className=\"container\"> \n                                                    {/* <Card.Text >{p.createTimestamp}</Card.Text> */}\n                                                        <Card.Text>{p.body}</Card.Text>\n                                                            <div style={{display: 'flex', flexDirection: 'column'}}>\n\n                                                                <Card.Text style={{position: 'absolute', bottom: '5px', marginBottom: '0'}}>\n                                                                        <i className={p.likes > 0 ? 'blue fas fa-thumbs-up' : 'fas fa-thumbs-up'}  onClick={() => this.likePost(p.id)}></i>\n                                                                        {p.likes}\n                                                                    \n                                                                    <i className={p.dislikes > 0 ? 'red fas fa-thumbs-down' : 'fas fa-thumbs-down'} onClick={() => this.dislikePost(p.id)}></i>\n                                                                    {p.dislikes}\n                                                                </Card.Text>\n                                                \n                                                                <Card.Text style={{position: 'absolute', bottom: '5px', right: '10px'}}>\n                                                                    {p.author}\n                                                                </Card.Text>\n                                                \n                                                             </div>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Card>\n                                        <br />\n                                    </div>\n                                ))}\n                        </div>\n                }        \n                <div className=\"footer\">\n                    <div className=\"center\">\n                        <div className=\"row\">\n                            <a className=\"link\" style={{paddingRight: \"5px\"}} href=\"https://linkedin.com/in/ruthamaya\"><i className=\"fab fa-linkedin\"></i>LinkedIn</a>\n                            <a className=\"link \" href=\"https://github.com/amaya91\"><i class=\"fab fa-github\"></i>GitHub</a>\n                        </div>\n                        <div className=\"row\"> Ruth Amaya 2020 </div>\n                    </div>\n                </div>\n            </div>\n        )        \n    }    \n}            \n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    // completeList: \n    // completedList: state.user.todoList.filter(t => t.completed)\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Main)","/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Form, Button, Alert, Navbar, Nav, NavDropdown, FormControl, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n// import { login } from '../../user/userActions';\nimport { API } from '../../config';\nimport { Link } from 'react-router-dom';\n\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            repassword: \"\",\n            hasError: false,\n            hasServerError: false,\n        }\n    \n    }\n\n    handleFirstName = event => {\n        this.setState({ firstName: event.target.value });\n    }\n\n    handleLastName = event => {\n        this.setState({ lastName: event.target.value });\n    }\n\n    handleEmail = event => {\n        this.setState({ email: event.target.value });\n    }\n\n    handlePassword = event => {\n        this.setState({ password: event.target.value });\n    }\n\n    handleRepassword = event => {\n        this.setState({ repassword: event.target.value });\n    }\n    goToHome = () => {\n        this.props.history.push('/');\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        //call API\n\n        if (this.state.password !== this.state.repassword) {\n            this.setState({hasError: true})\n            return;\n        } \n\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n\n        fetch(API + 'signup', requestOptions)\n            .then(res => {\n                if(res.status !== 201){\n                    throw new Error(\"Register Failed\");\n                }    \n                return res.json();\n            })\n            .then(response => {\n                //save response to the state\n                this.props.history.push('login');\n            })\n            .catch(err => {\n                this.setState({ hasServerError: true })\n                console.log(err);\n            })\n\n            \n    }\n\n    render(){\n        return (\n            <div className=\"page-container\">\n                <Navbar bg=\"light\" className=\"white\" expand=\"xl\">\n                    <Navbar.Brand id=\"parent\" style={{ marginRight: '0'}}> The R Word.</Navbar.Brand>\n                </Navbar>\n                <div className=\"container content-wrap\">\n                        <Card >\n                            <Card.Body>\n                                {this.state.hasError ? \n                                <Alert variant=\"danger\" onClick={() => this.setState({hasError: false})}>Passwords do not match.</Alert> : \"\"}\n                                {this.state.hasServerError ? \n                                <Alert variant=\"danger\" onClick={() => this.setState({hasServerError: false})}>Sign up failed.</Alert> : \"\"}\n                                <Form onSubmit={this.handleSubmit}>\n                                    <h2>The R Word</h2>\n                                    <Form.Group>\n                                        <Form.Label>Email</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.email}\n                                            onChange={this.handleEmail}\n                                        />    \n                                        <br />\n                                        <Form.Label>First Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.firstName}\n                                            onChange={this.handleFirstName}\n                                        />    \n                                        <br />\n                                        <Form.Label>Last Name</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.lastName}\n                                            onChange={this.handleLastName}\n                                        />    \n                                        <br />\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            value={this.state.password}\n                                            onChange={this.handlePassword}\n                                        />\n                                        <Form.Label>Re-enter Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            value={this.state.repassword}\n                                            onChange={this.handleRepassword}\n                                        />\n                                    </Form.Group>    \n                                    <Button type=\"submit\" style={{ width: '100%'}} variant=\"dark\">Sign Up</Button>\n                                </Form>\n                                <br />\n                                <Link className=\"link\" to=\"/\">Already a user? Log in!</Link>\n                            </Card.Body>\n                        </Card>           \n                </div>\n                <div className=\"footer\">\n                    <div className=\"center\">\n                        <div className=\"row\">\n                            <a className=\"link\" style={{paddingRight: \"5px\"}} href=\"https://linkedin.com/in/ruthamaya\"><i className=\"fab fa-linkedin\"></i>LinkedIn</a>\n                            <a className=\"link \" href=\"https://github.com/amaya91\"><i class=\"fab fa-github\"></i>GitHub</a>\n                        </div>\n                        <div className=\"row\"> Ruth Amaya 2020 </div>\n                    </div>\n                </div>\n            </div>    \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SignUp)","/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Form, Button, Navbar, Nav,  FormGroup, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { API } from '../../config';\nimport { addPost, loadPosts } from '../../reducers/user/userActions'\n// import { logout } from '../../reducers/user/userActions';\n\n\nclass Create extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 0,\n            title: \"\",\n            body: \"\",\n            author: \"\",\n            subraddit: \"\",\n        }\n\n    \n    }\n\n    componentDidMount(){\n\n    }\n\n   handleCreate = event => {\n        event.preventDefault();\n\n        if(this.state.title.length == 0){\n            return;\n        } \n\n        const newPost = {\n            author: this.state.author,\n            title: this.state.title,\n            body: this.state.body,\n            subraddit: this.state.subraddit\n        }\n\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(newPost),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n\n        fetch(API + \"post\", requestOptions)\n            .then(res => {\n                if(res.status !== 201) {\n                    throw new Error(\"Not created.\");\n                }    \n                return res.json()\n            })\n            .then(response => {\n                //save to global state\n                this.props.addPost(response);\n                this.props.history.push('/');\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n\n    logout = () => {\n        localStorage.clear();\n        this.props.history.push('/login');\n    }\n\n    handleAuthor = event => {\n        this.setState({ author: event.target.value });\n    }\n\n    handleTitle = event => {\n        this.setState({ title: event.target.value });\n    }\n\n    handleBody = event => {\n        this.setState({ body: event.target.value });\n    }\n\n    handleSubraddit = event => {\n        this.setState({ subraddit: event.target.value });\n    }\n\n    goToCreateForm = () => {\n        this.props.history.push('/create');\n    }\n     \n    goToHome = () => {\n        this.props.history.push('/');\n    }\n\n    render(){\n        if(this.state.loading){\n            return (\n                <div></div>\n            )\n        }\n        return (\n            <div className=\"page-container\">\n                <Navbar bg=\"light\" className=\"white\" expand=\"xl\">\n                    <Navbar.Brand id=\"parent\" style={{ marginRight: '0'}} onClick={this.goToHome}> The R Word.</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <Nav.Link onClick={this.goToHome}>Posts</Nav.Link>\n                            <Nav.Link onClick={this.logout}>Log Out</Nav.Link>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n               <div className=\"container content-wrap\"> \n                        <Card>\n                            <Card.Body>\n                                <Form onSubmit={this.handleCreate}>\n                                    <h2>New Post</h2>\n                                    <FormGroup>\n                                    <Form.Label>Title:</Form.Label>\n                                    <Form.Control\n                                            type=\"text\"\n                                            value={this.state.title}\n                                            onChange={this.handleTitle}\n                                        />  \n                                        <Form.Label>Body:</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.body}\n                                            onChange={this.handleBody}\n                                        />  \n                                        <Form.Label>Author:</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.author}\n                                            onChange={this.handleAuthor}\n                                        />  \n                                        <Form.Label>Topic:</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            value={this.state.subraddit}\n                                            onChange={this.handleSubraddit}\n                                        />  \n                                        </FormGroup>\n                                        <Button style={{ width: '100%'}} variant=\"dark\" type=\"submit\">Create New Post</Button>\n\n                                </Form>\n                            </Card.Body>\n                        </Card>        \n               </div>\n\n               <div className=\"footer\">\n                    <div className=\"center\">\n                        <div className=\"row\">\n                            <a className=\"link\" style={{paddingRight: \"5px\"}} href=\"https://linkedin.com/in/ruthamaya\"><i className=\"fab fa-linkedin\"></i>LinkedIn</a>\n                            <a className=\"link \" href=\"https://github.com/amaya91\"><i class=\"fab fa-github\"></i>GitHub</a>\n                        </div>\n                        <div className=\"row\"> Ruth Amaya 2020 </div>\n                    </div>\n                </div>\n            </div>\n        )        \n    }    \n}            \n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    // completeList: \n    // completedList: state.user.todoList.filter(t => t.completed)\n})\n\nconst mapDispatchToProps = {\n    addPost, \n    loadPosts\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Create)","/* eslint-disable eqeqeq */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-useless-constructor */\nimport React, { Component } from 'react';\nimport { Form, Button, Alert, Navbar, Nav, NavDropdown, FormControl, Card } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { login } from '../../reducers/user/userActions';\nimport { API } from '../../config';\nimport { Link } from 'react-router-dom';\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            hasError: false\n        }\n    \n    }\n\n    goToSignUp = () => {\n        this.props.history.push('/signup');\n    }\n\n    handleEmail = event => {\n        this.setState({ email: event.target.value });\n    }\n\n    handlePassword = event => {\n        this.setState({ password: event.target.value });\n    }\n    \n\n    handleSubmit = event => {\n        event.preventDefault();\n        //call API\n\n        const requestOptions = {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\"Content-Type\": \"application/json\"}\n        }\n\n        fetch(API + 'login', requestOptions)\n            .then(res => {\n                if(res.status !== 200){\n                    throw new Error(\"Login Failed\");\n                }    \n                return res.json();\n            })\n            .then(response => {\n                console.log(response.userId);\n                localStorage.setItem(\"user\", this.state.email);\n                //save response to the state\n                this.props.login(response);\n                this.props.history.push(\"/\");\n            })\n            .catch(err => {\n                this.setState({ hasError: true })\n                console.log(err);\n            })\n    }\n\n    render(){\n        return (\n            <div className=\"page-container\">\n                <Navbar bg=\"light\" className=\"white\" expand=\"xl\">\n                    <Navbar.Brand id=\"parent\" style={{ marginRight: '0'}}> The R Word.</Navbar.Brand>\n                </Navbar>\n            <div className=\"container content-wrap\" >\n                    <Card >\n                        <Card.Body>\n                            {this.state.hasError ? \n                            <Alert variant=\"danger\" onClick={() => this.setState({hasError: false})}>Login failed</Alert> : \"\"}\n                            <Form onSubmit={this.handleSubmit}>\n                                <h2>The R Word</h2>\n                                <Form.Group>\n                                    <Form.Label>Email</Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.state.email}\n                                        onChange={this.handleEmail}\n                                    />    \n                                    <br />\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handlePassword}\n                                    />\n                                </Form.Group>\n                                <Button type=\"submit\" style={{ width: '100%'}} variant=\"dark\">Login</Button>\n                            </Form>\n                            <br />\n                            <Link className=\"link\" to=\"/signup\">Not a User? Sign up!</Link>\n                        </Card.Body>\n                    </Card>       \n            </div>\n            <div className=\"footer\">\n                    <div className=\"center\">\n                        <div className=\"row\">\n                            <a className=\"link\" style={{paddingRight: \"5px\"}} href=\"https://linkedin.com/in/ruthamaya\"><i className=\"fab fa-linkedin\"></i>LinkedIn</a>\n                            <a className=\"link \" href=\"https://github.com/amaya91\"><i class=\"fab fa-github\"></i>GitHub</a>\n                        </div>\n                        <div className=\"row\"> Ruth Amaya 2020 </div>\n                    </div>\n                </div>\n        </div>    \n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user\n})\n\nconst mapDispatchToProps = {\n    login\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Login)","\nimport React from 'react';\nimport { Switch } from 'react-router';\nimport AuthenticatedRoute from './components/AuthenticatedRoute';\nimport UnauthenticatedRoute from './components/UnauthenticatedRoute';\nimport main from './containers/main/main';\nimport signup from './containers/signup/signup';\nimport create from './containers/create/create';\nimport login from './containers/login/login';\n\nexport default ({ childProps }) => (\n    <Switch>\n        <AuthenticatedRoute\n            path=\"/\" exact\n            component={main}\n            props={childProps}\n        />\n        <UnauthenticatedRoute\n            path=\"/signup\" exact\n            component={signup}\n            props={childProps}\n        /> \n        <AuthenticatedRoute\n            path=\"/create\" exact\n            component={create}\n            props={childProps}\n        /> \n        <UnauthenticatedRoute\n            path=\"/login\" exact\n            component={login}\n            props={childProps}\n        /> \n    </Switch>\n)\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Routes from './Routes';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      isAuthenticated: false,\n      hasError: false,\n      createSuccess: false,\n    }\n\n  }\n\n  // componentDidMount() {\n  //   if(localStorage.getItem('user')) {\n  //     this.setState.isAuthenticated = true;\n  //   }\n  // }\n\n  render() {\n    let childProps = {\n      isAuthenticated: this.props.user.isAuthenticated\n    }\n    if(localStorage.getItem('user')){\n      childProps = {isAuthenticated: true}\n    }  \n    return (\n      <div className=\"white font\" style={{ height: '100%'}}>\n         <Routes childProps={childProps}/>\n      </div>\n    )  \n  }  \n}  \n\nconst mapDispatchToProps = {\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOAD_POSTS, ADD_POST, LOGIN } from './userActions';\n\nconst initialState = {\n    email: \"\",\n    password: \"\",\n    userId: 0,\n    posts: [],\n    isAuthenticated: false\n}\n\nconst user = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN: {\n            return {\n                ...state,\n                email: action.payload.email,\n                userId: action.payload.userId,\n                isAuthenticated: true,\n            }\n        }\n        case LOAD_POSTS: {\n            return {\n                ...state,\n                posts: action.payload\n            }\n        }\n        case ADD_POST: {\n            // let oldList = state.todoList\n            // let newList = [...oldList, action.payload];\n            return {\n                ...state,\n                post: action.payload\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport default user;","import { combineReducers } from 'redux';\nimport user from './reducers/user/userReducer';\n\nexport default combineReducers({\n    user\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers.js';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}